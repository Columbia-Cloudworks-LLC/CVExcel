rules:
  - id: docs-sync-api
    category: "documentation"
    description: "Ensure README/API docs reflect exported public commands."
    check: { run: "pwsh .ai/checks/extract_api.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_docs_sync.ps1 -ApiJson .ai/state/api.json" }
    judgment_tests:
      - "pwsh ./build.ps1"
      - "pwsh ./test.ps1"
      - "pwsh ./lint.ps1"
    acceptance:
      require_benefit_score_min: 0.70

  - id: dead-links
    category: "hygiene"
    check: { run: "pwsh .ai/checks/find_dead_links.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_fix_dead_links.ps1 -Report .ai/state/deadlinks.json" }
    judgment_tests:
      - "pwsh ./build.ps1"
    acceptance:
      require_benefit_score_min: 0.65

  - id: comment-accuracy-vs-code
    category: "documentation"
    check: { run: "pwsh .ai/checks/comment_vs_impl.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_comment_updates.ps1 -Report .ai/state/comments.json" }
    acceptance:
      require_benefit_score_min: 0.70

  - id: cursor-chat-integration
    category: "development"
    description: "Handle Cursor chat requests for code changes and improvements."
    check: { run: "pwsh .ai/checks/cursor_chat_monitor.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_cursor_chat_changes.ps1 -Request .ai/state/cursor-request.json" }
    judgment_tests:
      - "pwsh ./tests/run-all-tests.ps1"
      - "pwsh -Command 'Get-ChildItem vendors/*.ps1 | ForEach-Object { Write-Host \"Testing $_\"; & $_ -Test }'"
    acceptance:
      require_benefit_score_min: 0.60
      cursor_chat_approval: true

  - id: vendor-module-improvements
    category: "functionality"
    description: "Improve vendor module scraping accuracy and error handling."
    check: { run: "pwsh .ai/checks/vendor_module_analysis.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_vendor_improvements.ps1 -Analysis .ai/state/vendor-analysis.json" }
    judgment_tests:
      - "pwsh ./tests/test-vendor-integration.ps1"
      - "pwsh ./tests/test-playwright-functions.ps1"
    acceptance:
      require_benefit_score_min: 0.65

  - id: security-compliance
    category: "security"
    description: "Ensure NIST security guidelines compliance across all modules."
    check: { run: "pwsh .ai/checks/security_audit.ps1" }
    plan:  { run: "pwsh .ai/planners/plan_security_fixes.ps1 -Audit .ai/state/security-audit.json" }
    judgment_tests:
      - "pwsh -Command 'Invoke-ScriptAnalyzer -Path . -Recurse -Severity Error'"
      - "pwsh ./tests/test-security-compliance.ps1"
    acceptance:
      require_benefit_score_min: 0.80